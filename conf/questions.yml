questions:
  -
    slug: 'question_opensource'
    title: 'Is Apache Grails an Open Source project?'
    answer: |
      Yes, Apache Grails is an Open Source project licensed under the
      [Apache License v2](https://www.apache.org/licenses/LICENSE-2.0).
  -
    slug: 'eccn'
    title: 'What is the Export Control Classification Number (ECCN) for Grails?'
    answer: |
      Grails is an open source technology that is not on the Commerce Control List,
      and is therefore classified with the general purpose classification of EAR 99.
  -
    slug: 'question_learn'
    title: 'What is the best way to learn about Grails?'
    answer: |
      Read the [User Guide](/documentation.html) for the version you are planning to use.
      We recommend you start with the latest stable version of the framework. We have also
      written a collection of [Guides](https://guides.grails.org), which contain step-by-step
      tutorials for solving common scenarios.
  -
    slug: 'question_training'
    title: 'Do you offer Grails training?'
    answer: |
      The Apache Software Foundation does not offer Grails Training.\
      See [Commercial Support Options](/support.html).
  -
    slug: 'question_usage'
    title: 'Where can I ask questions about usage?'
    answer: |
      The best place to get community support is to use the [Apache Grails User mailing lists](/community.html).
      Alternatively you can use [GitHub Discussions](https://github.com/apache/grails-core/discussions) or
      [Slack](https://slack.grails.org) Grails Community Slack.
  -
    slug: 'question_socialmedia'
    title: 'Where can I find Grails on social media?'
    answer: |
      You can find Grails on [X](https://x.com/grailsframework)
      and [LinkedIn](https://www.linkedin.com/groups/39757).
  -
    slug: 'question_mailinglist'
    title: 'Do you have a mailing list?'
    answer: |
      Yes, there are a number of mailing lists at the ASF. Check the
      [Community](/community.html) page for more information
  -
    slug: 'question_feature'
    title: 'Where can I suggest a new feature or share an interesting finding?'
    answer: |
      The best place is to use the [Apache Grails Developer mailing lists](/community.html).
      
      You can also join [Grails Community Slack](https://slack.grails.org) which a great place
      to start a conversation with the Grails developers and other Grails users.
  -
    slug: 'question_slack_vs_stackoverflow'
    title: 'What is the difference between the mailing list, Slack and interaction on Stack Overflow?'
    answer: |
      - Use the [Grails Community Slack](https://slack.grails.org) for discussion around
        the framework's development.
      - For questions we recommend to use the [Apache Grails User mailing lists](/community.html).
      - [Stack Overflow](https://stackoverflow.com/questions/tagged/grails) also contains long lived Q&A.
      - Long lived discussions will occur on GitHub.
  -
    slug: 'question_issue'
    title: 'How do I report an issue with the Grails framework?'
    answer: |
      The Grails project uses [GitHub issues](https://github.com/apache/grails-core/issues)
      to report and track issues, feature enhancements, and new features.
      Make sure you're logged-in before proceeding.
      
      [Report an issue](https://github.com/apache/grails-core/issues/new)
  -
    slug: 'question_docs'
    title: 'How can I contribute to improving the documentation?'
    answer: |
      Grails documentation comes in several forms:
      - The [reference documentation](https://grails.apache.org/docs/latest/) contains language
        specification, user guides, a getting started tutorial, and more.
      - The [GroovyDoc APIs](api.html) documents the classes of the Grails code base.
      - [GitHub](https://github.com/apache/grails-static-website) allows users to contribute
        to this website.
      
      Contributing to the documentation is fairly easy. Create a GitHub account or sign in
      with an existing account, then go to the
      [documentation website](https://grails.apache.org/docs/latest/)
      and select the "Improve this doc" button at the top of the page you wish to edit.
      
      Please don't hesitate to help us make improvements, fix typos or broken language,
      clarify complicated sections, add new material, and anything else you feel will be
      helpful to other Grails users.
  -
    slug: 'question_code'
    title: 'How can I contribute to Grails code?'
    answer: |
      If you are looking to make an initial contribution, just raise your hand on the
      [Apache Grails Developer mailing lists](/community.html) and tell us about your desire
      to work on a particular problem.
      
      For more complicated tasks, the best approach is to bring your interest to the attention
      of the Grails developers. They can provide guidance on how best to tackle a particular
      problem, collaborate on implementation ideas, and discuss the semantics or scope of the
      proposed change.
      
      ### Cloning the code base
      
      To work on the Grails code base, you should be proficient in [Git](https://git-scm.com/)
      and (ideally) have an account on [GitHub](https://github.com/), so you can create
      [pull requests](https://help.github.com/articles/creating-a-pull-request) with your changes.

      If you have Git installed on your machine, you should be able to clone the Grails repository
      with the following command:
      ```
      git clone git://github.com/apache/grails-core.git
      ```
      
      Make sure you configure Git appropriately with the same email that you registered with on GitHub.
      ```
      git config --global user.name "YOUR NAME"
      git config --global user.email "YOUR EMAIL"
      ```
      
      You can verify these are configured appropriately by running:
      ```
      git config --list
      ```
      
      ### Working on the code base
      
      If you are working with the IntelliJ IDEA development environment, you can import the project using
      the Intellij Gradle Tooling ("File / Import Project" and select the "build.gradle" file).
      
      To get a local development version of Grails working, first run the install task.
      ```
      ./gradlew assemble
      ./gradlew publishToMavenLocal
      ```
      
      Then install [SDKman](https://sdkman.io), which is the quickest way to set up a development environment.
      
      Once you have SDKman installed, point SDKman to your local development version of Grails.
      ```
      sdk install grails dev /path/to/checkout
      sdk use grails dev
      ```
      
      Now the "grails" command will be using your development version!
      
      The most important command you will have to run before sending your changes is the check command.
      ```
      ./gradlew check
      ```
      
      For a successful contribution, all tests should be green!
      
      ### Creating a pull request
      
      Once you are satisfied with your changes:
      - commit your changes in your local branch
      - push your changes to your remote branch on GitHub
      - send us a [pull request](https://help.github.com/articles/creating-a-pull-request)
  -
    slug: 'question_develocity'
    title: 'Where can I view the Develocity instance for the Grails framework?'
    answer: |
      Our Develocity instance can be found at [https://ge.grails.org](https://ge.grails.org).
  -
    slug: 'question_sponsors'
    title: 'Who sponsors Grails development?'
    answer: |
      The Apache Grails framework is a community driven effort, run under the
      Apache Software Foundation.
  -
    slug: 'community_collective'
    title: 'Can I help fund the development of Apache Grails?'
    answer: |
      While the Apache Grails project does not accept direct funding, the community-run
      [Friends of Grails](https://opencollective.com/friends-of-grails) initiative supports
      activities within the Apache Grails community.
